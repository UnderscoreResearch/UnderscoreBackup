/*
 * Underscore Backup Service Public API
 * Public and externally accessible API for the Underscore Backup Service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@underscorebackup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.underscoreresearch.backup.service.api.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SecretRequest
 */
@JsonPropertyOrder({
  SecretRequest.JSON_PROPERTY_EMAIL_HASH,
  SecretRequest.JSON_PROPERTY_SECRET
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-13T08:26:04.416037100-08:00[America/Los_Angeles]")
public class SecretRequest {
  public static final String JSON_PROPERTY_EMAIL_HASH = "emailHash";
  private String emailHash;

  public static final String JSON_PROPERTY_SECRET = "secret";
  private String secret;

  public SecretRequest() { 
  }

  public SecretRequest emailHash(String emailHash) {
    this.emailHash = emailHash;
    return this;
  }

   /**
   * Base64url encoding of SHA256 hash of email used to encrypt the secret.
   * @return emailHash
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Base64url encoding of SHA256 hash of email used to encrypt the secret.")
  @JsonProperty(JSON_PROPERTY_EMAIL_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmailHash() {
    return emailHash;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmailHash(String emailHash) {
    this.emailHash = emailHash;
  }


  public SecretRequest secret(String secret) {
    this.secret = secret;
    return this;
  }

   /**
   * Encrypted secret.
   * @return secret
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Encrypted secret.")
  @JsonProperty(JSON_PROPERTY_SECRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSecret() {
    return secret;
  }


  @JsonProperty(JSON_PROPERTY_SECRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSecret(String secret) {
    this.secret = secret;
  }


  /**
   * Return true if this SecretRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecretRequest secretRequest = (SecretRequest) o;
    return Objects.equals(this.emailHash, secretRequest.emailHash) &&
        Objects.equals(this.secret, secretRequest.secret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emailHash, secret);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecretRequest {\n");
    sb.append("    emailHash: ").append(toIndentedString(emailHash)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

