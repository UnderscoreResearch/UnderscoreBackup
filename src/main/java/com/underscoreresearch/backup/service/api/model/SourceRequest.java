/*
 * Underscore Backup Service Public API
 * Public and externally accessible API for the Underscore Backup Service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@underscorebackup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.underscoreresearch.backup.service.api.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SourceRequest
 */
@JsonPropertyOrder({
  SourceRequest.JSON_PROPERTY_NAME,
  SourceRequest.JSON_PROPERTY_IDENTITY,
  SourceRequest.JSON_PROPERTY_DESTINATION,
  SourceRequest.JSON_PROPERTY_ENCRYPTION_MODE,
  SourceRequest.JSON_PROPERTY_APPLICATION_URL,
  SourceRequest.JSON_PROPERTY_KEY,
  SourceRequest.JSON_PROPERTY_VERSION,
  SourceRequest.JSON_PROPERTY_SHARING_KEY
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-21T23:05:24.673599500-08:00[America/Los_Angeles]")
public class SourceRequest {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_IDENTITY = "identity";
  private String identity;

  public static final String JSON_PROPERTY_DESTINATION = "destination";
  private String destination;

  public static final String JSON_PROPERTY_ENCRYPTION_MODE = "encryptionMode";
  private String encryptionMode;

  public static final String JSON_PROPERTY_APPLICATION_URL = "applicationUrl";
  private String applicationUrl;

  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_SHARING_KEY = "sharingKey";
  private String sharingKey;

  public SourceRequest() { 
  }

  public SourceRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Descriptive name of source.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Descriptive name of source.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public SourceRequest identity(String identity) {
    this.identity = identity;
    return this;
  }

   /**
   * Unique identity of source.
   * @return identity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unique identity of source.")
  @JsonProperty(JSON_PROPERTY_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIdentity() {
    return identity;
  }


  @JsonProperty(JSON_PROPERTY_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIdentity(String identity) {
    this.identity = identity;
  }


  public SourceRequest destination(String destination) {
    this.destination = destination;
    return this;
  }

   /**
   * Destination of manifest for source (Encrypted and base64 encoded).
   * @return destination
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Destination of manifest for source (Encrypted and base64 encoded).")
  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDestination() {
    return destination;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestination(String destination) {
    this.destination = destination;
  }


  public SourceRequest encryptionMode(String encryptionMode) {
    this.encryptionMode = encryptionMode;
    return this;
  }

   /**
   * Mode of encryption used for destination data.
   * @return encryptionMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Mode of encryption used for destination data.")
  @JsonProperty(JSON_PROPERTY_ENCRYPTION_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncryptionMode() {
    return encryptionMode;
  }


  @JsonProperty(JSON_PROPERTY_ENCRYPTION_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncryptionMode(String encryptionMode) {
    this.encryptionMode = encryptionMode;
  }


  public SourceRequest applicationUrl(String applicationUrl) {
    this.applicationUrl = applicationUrl;
    return this;
  }

   /**
   * URL to application for source.
   * @return applicationUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL to application for source.")
  @JsonProperty(JSON_PROPERTY_APPLICATION_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApplicationUrl() {
    return applicationUrl;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicationUrl(String applicationUrl) {
    this.applicationUrl = applicationUrl;
  }


  public SourceRequest key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Public key data for source
   * @return key
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Public key data for source")
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKey(String key) {
    this.key = key;
  }


  public SourceRequest version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Application version for source.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Application version for source.")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  public SourceRequest sharingKey(String sharingKey) {
    this.sharingKey = sharingKey;
    return this;
  }

   /**
   * Base32 encoding of public key to use for encrypting share information
   * @return sharingKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base32 encoding of public key to use for encrypting share information")
  @JsonProperty(JSON_PROPERTY_SHARING_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSharingKey() {
    return sharingKey;
  }


  @JsonProperty(JSON_PROPERTY_SHARING_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharingKey(String sharingKey) {
    this.sharingKey = sharingKey;
  }


  /**
   * Return true if this SourceRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceRequest sourceRequest = (SourceRequest) o;
    return Objects.equals(this.name, sourceRequest.name) &&
        Objects.equals(this.identity, sourceRequest.identity) &&
        Objects.equals(this.destination, sourceRequest.destination) &&
        Objects.equals(this.encryptionMode, sourceRequest.encryptionMode) &&
        Objects.equals(this.applicationUrl, sourceRequest.applicationUrl) &&
        Objects.equals(this.key, sourceRequest.key) &&
        Objects.equals(this.version, sourceRequest.version) &&
        Objects.equals(this.sharingKey, sourceRequest.sharingKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, identity, destination, encryptionMode, applicationUrl, key, version, sharingKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    encryptionMode: ").append(toIndentedString(encryptionMode)).append("\n");
    sb.append("    applicationUrl: ").append(toIndentedString(applicationUrl)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    sharingKey: ").append(toIndentedString(sharingKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

