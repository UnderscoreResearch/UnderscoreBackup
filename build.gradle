plugins {
    id 'java'
    id 'application'
    id 'distribution'
    id 'edu.sc.seis.launch4j' version '2.4.6'
}

application {
    mainClassName = 'com.underscoreresearch.backup.cli.Main'
    applicationDefaultJvmArgs = ['-Xmx128m']
}

group 'com.underscoreresearch'
version '0.2.1'

sourceCompatibility = 1.8

sourceSets {
    main {
        java {
            srcDirs 'src/main'
        }
        resources {
            srcDirs 'src/resources'
        }
    }
    test {
        java {
            srcDirs 'src/test'
        }
    }
}

task consoleexe(type: edu.sc.seis.launch4j.tasks.Launch4jLibraryTask) {
    mainClassName = 'com.underscoreresearch.backup.cli.Main'
    outfile = "underscorebackup.exe"
    headerType = "console"
    bundledJrePath = "..\\jre"
    bundledJre64Bit = true
    priority = "idle"
    jreMinVersion = 1.8
    maxHeapSize = 128
}

task guiexe(type: edu.sc.seis.launch4j.tasks.Launch4jLibraryTask) {
    mainClassName = 'com.underscoreresearch.backup.cli.Main'
    outfile = "underscorebackup-gui.exe"
    headerType = "gui"
    bundledJrePath = "..\\jre"
    bundledJre64Bit = true
    priority = "idle"
    jreMinVersion = 1.8
    maxHeapSize = 128
}

task installerDef(type: Copy) {
    from("${rootProject.projectDir}/windows/innosetup.iss")
    rename("innosetup.iss", "innosetup-expanded.iss")
    expand([
            applicationVersion: "${version}"
    ])
    into("${rootProject.projectDir}/windows")
}

task installer(dependsOn: [guiexe, consoleexe, installerDef], type:Exec) {
    workingDir 'windows'
    executable 'C:\\Program Files (x86)\\Inno Setup 6\\iscc.exe'
    args "innosetup-expanded.iss"
}

task allDist {
    dependsOn installer, distZip, distTar
}

distributions {
    main {
        baseName 'underscorebackup'
        contents {
            from('.') {
                include 'README.md'
                include 'bin/*'
                include 'scripts/*'
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile (
            'com.amazonaws:aws-java-sdk-s3:1.11.728',
            'com.fasterxml.jackson.core:jackson-databind:2.10.2',
            'com.google.guava:guava:28.2-jre',
            'com.joestelmach:natty:0.13',
            'commons-cli:commons-cli:1.4',
            'commons-lang:commons-lang:2.6',
            'org.apache.logging.log4j:log4j-api:2.13.0',
            'org.apache.logging.log4j:log4j-core:2.13.0',
            'org.apache.logging.log4j:log4j-slf4j-impl:2.13.0',
            'com.google.inject:guice:4.2.2',
            'org.mapdb:mapdb:3.0.8',
            'org.projectlombok:lombok:1.18.12',
            'org.reflections:reflections:0.9.12',
            'org.slf4j:slf4j-api:1.7.30',
    )

    testImplementation (
            'org.hamcrest:hamcrest:2.2',
            'org.junit.jupiter:junit-jupiter:5.6.0',
            'org.mockito:mockito-junit-jupiter:3.3.0'
    )

    testRuntimeOnly (
            'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    )

    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

test {
    useJUnitPlatform()
}
